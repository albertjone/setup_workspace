#!/bin/bash
function dir_or_file_exists() {
  if [ -d $1 ] || [ -f $1 ]
    then
      return 1
    else
      return 0
  fi
}

function print_software_is_installed() {
  echo -e "\033[34m[ $1 ]\033[0m"
}

function is_brew_installed() {
  brew -v
  if [[ $? -eq 0 ]]
    then
      retval=1
    else
      retval=0
  fi
}

function is_brew_software_installed() {
  local target=$(brew list | grep $1)
  if [[ -z $target || $target == " " ]]; then
    target=$(brew cask list | grep $1)
  fi

  if [[ -z $target || $target == " " ]]; then
      return 0
    else
      return 1
  fi
}

function blue() {
  echo -e "\033[34m[ $1 ]\033[0m"
}

function green() {
  echo -e "\033[32m[ $1 ]\033[0m"
}

function red() {
  echo -e "\033[31m\033[01m[ $1 ]\033[0m"
}

function file_not_exists() {
  red "file: $1 not exist"
}

function file_or_dir_already_exists() {
  blue "file or directory: $1 already exists"
}

function file_or_dir_create_unsuccessfully() {
  local message="file or directory created unsuccessfully with name:"$1
  green $message
}

function software_is_installed() {
  local message="software is installed with name:"$1
  blue $message
}

function set_http_https_proxy() {
  export http_proxy=http://127.0.0.1:1087
  export https_proxy=http://127.0.0.1:1087
}

function unset_http_https_proxy() {
  unset http_proxy
  unset https_proxy
}

function setup_virtualenv() {
  pip install virtualenv
  virtualenv $TOP_DIR/.venv
}

function setup_zshrc() {
  # bakup your zsh configuration
  if [ -f ~/.zshrc ]
    then
      mv ~/.zshrc ~/.zshrc.bak$(date "+%Y-%m-%d%H:%M:%S")
  fi

  cat << EOF > ~/.zshrc
source /usr/local/opt/powerlevel9k/powerlevel9k.zsh-theme

POWERLEVEL9K_CUSTOM_WIFI_SIGNAL="zsh_wifi_signal"
POWERLEVEL9K_CUSTOM_WIFI_SIGNAL_BACKGROUND="white"
POWERLEVEL9K_CUSTOM_WIFI_SIGNAL_FOREGROUND="black"

zsh_wifi_signal(){
        local output=\$(/System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Resources/airport -I)
        local airport=\$(echo \$output | grep 'AirPort' | awk -F': ' '{print \$2}')

        if [ "\$airport" = "Off" ]; then
                local color='%F{black}'
                echo -n "%{\$color%}Wifi Off"
        else
                local ssid=\$(echo \$output | grep ' SSID' | awk -F': ' '{print \$2}')
                local speed=\$(echo \$output | grep 'lastTxRate' | awk -F': ' '{print \$2}')
                local color='%F{black}'

                [[ \$speed -gt 100 ]] && color='%F{black}'
                [[ \$speed -lt 50 ]] && color='%F{red}'

                echo -n "%{\$color%}\$speed Mbps \uf1eb%{%f%}" # removed char not in my PowerLine font
        fi
}

POWERLEVEL9K_CONTEXT_TEMPLATE='%n'
POWERLEVEL9K_CONTEXT_DEFAULT_FOREGROUND='white'
POWERLEVEL9K_BATTERY_CHARGING='yellow'
POWERLEVEL9K_BATTERY_CHARGED='green'
POWERLEVEL9K_BATTERY_DISCONNECTED='$DEFAULT_COLOR'
POWERLEVEL9K_BATTERY_LOW_THRESHOLD='10'
POWERLEVEL9K_BATTERY_LOW_COLOR='red'
POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX=''
POWERLEVEL9K_BATTERY_ICON='\uf1e6 '
POWERLEVEL9K_PROMPT_ON_NEWLINE=true
POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX="%F{014}\u2570%F{cyan}\uF460%F{073}\uF460%F{109}\uF460%f "
POWERLEVEL9K_VCS_MODIFIED_BACKGROUND='yellow'
POWERLEVEL9K_VCS_UNTRACKED_BACKGROUND='yellow'
POWERLEVEL9K_VCS_UNTRACKED_ICON='?'

POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(os_icon virtualenv context battery dir vcs)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status time dir_writable ip custom_wifi_signal ram load background_jobs)

POWERLEVEL9K_SHORTEN_DIR_LENGTH=1

POWERLEVEL9K_TIME_FORMAT="%D{\uf017 %H:%M \uf073 %d/%m/%y}"
POWERLEVEL9K_TIME_BACKGROUND='white'
POWERLEVEL9K_RAM_BACKGROUND='yellow'
POWERLEVEL9K_LOAD_CRITICAL_BACKGROUND="white"
POWERLEVEL9K_LOAD_WARNING_BACKGROUND="white"
POWERLEVEL9K_LOAD_NORMAL_BACKGROUND="white"
POWERLEVEL9K_LOAD_CRITICAL_FOREGROUND="red"
POWERLEVEL9K_LOAD_WARNING_FOREGROUND="yellow"
POWERLEVEL9K_LOAD_NORMAL_FOREGROUND="black"
POWERLEVEL9K_LOAD_CRITICAL_VISUAL_IDENTIFIER_COLOR="red"
POWERLEVEL9K_LOAD_WARNING_VISUAL_IDENTIFIER_COLOR="yellow"
POWERLEVEL9K_LOAD_NORMAL_VISUAL_IDENTIFIER_COLOR="green"
POWERLEVEL9K_HOME_ICON=''
POWERLEVEL9K_HOME_SUB_ICON=''
POWERLEVEL9K_FOLDER_ICON=''
POWERLEVEL9K_STATUS_VERBOSE=true
POWERLEVEL9K_STATUS_CROSS=true

# cause the python installed by homebrew will be placed to /usr/local/bin
# Todo(xiaojueguan) this line will fail in deploy
export PATH="/usr/local/bin:/usr/local/sbin:${PATH}"

alias swork="cd ~/code/Work"
alias sint="cd ~/code/Interest"
alias srep="cd ~/code/Openstack"
alias sproxy="export http_proxy=http://127.0.0.1:1087;export https_proxy=http://127.0.0.1:1087;"
alias dproxy="unset http_proxy;unset https_proxy"
alias stack="ssh root@192.168.199.126"
alias refresh="source ~/.zshrc"

EOF
}

function setup_pip_rep() {
  if [ ! -d ~/.pip ]; then
    mkdir ~/.pip
  fi
  cat << EOF > ~/.pip/pip.conf
[global]
index-url = https://mirrors.aliyun.com/pypi/simple/
EOF

}

function setup_virtualenvwrappers() {
  pip install virtualenvwrapper
    # bakup your zsh configuration
  cat << EOF >> ~/.zshrc
export WORKON_HOME=$HOME/.virtualenvs
source /usr/local/bin/virtualenvwrapper.sh
EOF

}

function create_virtualenvwrappers() {
  source ~/.zshrc
  mkvirtualenv develop
  mkvirtualenv deploy
}

function setup_config_for_vscode() {
  code -v
  if [ $? != 0 ]; then
    return
  fi
  cat << EOF > ~/Library/Application\ Support/Code/User/settings.json
{
    "workbench.editor.enablePreview": false,
    "python.venvFolders": ["\${workspaceFolder}/.tox", "\${workspaceFolder}/.venv", ".tox/"],
    "python.venvPath": "\${workspaceFolder}/.tox",
    "[python]": {
        "editor.rulers": [
            80,
            120
        ]
    },
    "[typescript]": {
        "editor.formatOnSave": true,
        "editor.formatOnPaste": true
    },
    "[markdown]": {
        "editor.formatOnSave": true,
        "editor.wordWrap": "on",
        "editor.renderWhitespace": "all",
        "editor.acceptSuggestionOnEnter": "off"
    },
    "[shellscript]": {
        "editor.minimap.maxColumn": 80,
        "editor.autoIndent": true,
        "editor.rulers": [
            80,
            120
        ]
    },
    "files.autoSave": "afterDelay",
    "window.zoomLevel": 2,
    "editor.fontFamily": "hack nerd font"
}
EOF

}




